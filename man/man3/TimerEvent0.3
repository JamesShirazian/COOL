.TH "TimerEvent0" 3 "Tue Jun 21 2011" "Version 1.100.000" "Object Oriented Library for ARM 7" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TimerEvent0 \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTimerEvent0\fP (float newInterval, int newNumberOfEventOccurrence, bool autoStart, void(*function)(void))"
.br
.ti -1c
.RI "\fBTimerEvent0\fP (float newInterval, int newNumberOfEventOccurrence, int newPriority, bool autoStart, void(*function)(void))"
.br
.ti -1c
.RI "void \fBstart\fP (void)"
.br
.ti -1c
.RI "void \fBstop\fP (void)"
.br
.ti -1c
.RI "void \fBsetTimerIntervalTo\fP (float newInterval)"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "TimerEvent0::TimerEvent0 (floatnewInterval, intnewNumberOfEventOccurrence, boolautoStart, void(*)(void)function)"
.br
This constructor initlize timer 0 of ARM 7 to create inttrupt and execute the given task.
.br
 
.PP
\fBParameters:\fP
.RS 4
\fIfloat\fP newInterval: Timer interval 
.br
 
.br
\fIint\fP newNumberOfEventOccurrence: number of occurance of this event
.br
.IP "\(bu" 2
If its values set to '0', that event execute as long as program is running. 
.PP
.br
\fIbool\fP autoStart: start the timer automatically if it is true and vice versa. 
.br
 
.br
\fIvoid(*function)(void),:\fP this reprecent the function which this timer has to execute preidicualy. 
.br
 
.br
Example:
.br

.br
 int a=0; 
.br
 \fBTimerEvent0\fP TE0(1,0,true,do1);
.br
 void do1(void)
.br
 { 
.br
 a++; 
.br
 LCD.display(a,2,0,0);
.br
 }
.br
 
.RE
.PP

.SS "TimerEvent0::TimerEvent0 (floatnewInterval, intnewNumberOfEventOccurrence, intnewPriority, boolautoStart, void(*)(void)function)"
.br
This constructor initlize timer 0 of ARM 7 to create inttrupt and execute the given task.
.br
 
.PP
\fBParameters:\fP
.RS 4
\fIfloat\fP newInterval: Timer interval 
.br
 
.br
\fIint\fP newNumberOfEventOccurrence: number of occurance of this event
.br
.IP "\(bu" 2
If its values set to '0', that event execute as long as program is running. 
.PP
.br
\fIint\fP newPriority: set the priority of this event.
.br
 
.br
\fIbool\fP autoStart: start the timer automatically if it is true and vice versa. 
.br
 
.br
\fIvoid(*function)(void),:\fP this reprecent the function which this timer has to execute preidicualy. 
.br
 
.br
Example:
.br

.br
 int a=0; 
.br
 \fBTimerEvent0\fP TE0(1,0,true,do1);
.br
 void do1(void)
.br
 { 
.br
 a++; 
.br
 LCD.display(a,2,0,0);
.br
 }
.br
 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void TimerEvent0::setTimerIntervalTo (floatnewInterval)"
.br
Adjust \fBTimerEvent0\fP interval if needed. it keeps the \fBTimerEvent0\fP status if it was on start mode it will be on start mode, same rule apply to stop mode.
.br
 
.PP
\fBParameters:\fP
.RS 4
\fIfloat\fP newInterval: new interval of \fBTimerEvent0\fP 
.br
Example:
.br

.br
 int a=0; 
.br
 \fBTimerEvent0\fP TE0(1,0,true,do1);
.br
 .... 
.br
 void do1(void)
.br
 { 
.br
 a++; 
.br
 LCD.display(a,2,0,0);
.br
 TE0.setTimerIntervalTo(10); 
.br
 }
.br
 
.RE
.PP

.SS "void TimerEvent0::start (void)"
.br
Start \fBTimerEvent0\fP.
.br
 
.br
Example:
.br

.br
 int a=0; 
.br
 \fBTimerEvent0\fP TE0(1,0,false,do1);
.br
 TE0.start(); 
.br
 .... 
.br
 void do1(void)
.br
 { 
.br
 a++; 
.br
 LCD.display(a,2,0,0);
.br
 }
.br
 
.SS "void TimerEvent0::stop (void)"
.br
Stop \fBTimerEvent0\fP.
.br
 
.br
Example:
.br

.br
 int a=0; 
.br
 \fBTimerEvent0\fP TE0(1,0,true,do1);
.br
 .... 
.br
 void do1(void)
.br
 { 
.br
 a++; 
.br
 LCD.display(a,2,0,0);
.br
 TE0.stop(); 
.br
 }
.br
 

.SH "Author"
.PP 
Generated automatically by Doxygen for Object Oriented Library for ARM 7 from the source code.
