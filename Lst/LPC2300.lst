


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* LPC2300.S: Startup file for Philips LPC2300 device s
                       eries                 */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2006-2008 Keil - An ARM Company. All r
                       ights reserved.       */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         
   14 00000000         ;/*
   15 00000000         ; *  The LPC2300.S code is executed after CPU Reset. Thi
                       s file may be 
   16 00000000         ; *  translated with the following SET symbols. In uVisi
                       on these SET 
   17 00000000         ; *  symbols are entered under Options - ASM - Define.
   18 00000000         ; *
   19 00000000         ; *  REMAP: when set the startup code initializes the re
                       gister MEMMAP 
   20 00000000         ; *  which overwrites the settings of the CPU configurat
                       ion pins. The 
   21 00000000         ; *  startup and interrupt vectors are remapped from:
   22 00000000         ; *     0x00000000  default setting (not remapped)
   23 00000000         ; *     0x40000000  when RAM_MODE is used
   24 00000000         ; *
   25 00000000         ; *  RAM_MODE: when set the device is configured for cod
                       e execution
   26 00000000         ; *  from on-chip RAM starting at address 0x40000000. 
   27 00000000         ; */
   28 00000000         
   29 00000000         
   30 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   31 00000000         
   32 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   33 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   34 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   35 00000000 00000013 
                       Mode_SVC



ARM Macro Assembler    Page 2 


                               EQU              0x13
   36 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   37 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   38 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   39 00000000         
   40 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   41 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   42 00000000         
   43 00000000         
   44 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   45 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   46 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   47 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   48 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   49 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   50 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   51 00000000         ;// </h>
   52 00000000         
   53 00000000 00000000 
                       UND_Stack_Size
                               EQU              0x00000000
   54 00000000 00000080 
                       SVC_Stack_Size
                               EQU              0x00000080
   55 00000000 00000000 
                       ABT_Stack_Size
                               EQU              0x00000000
   56 00000000 00000000 
                       FIQ_Stack_Size
                               EQU              0x00000000
   57 00000000 00000080 
                       IRQ_Stack_Size
                               EQU              0x00000080
   58 00000000 00000400 
                       USR_Stack_Size
                               EQU              0x00000400
   59 00000000         
   61 00000000 00000100 
                       ISR_Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
   62 00000000         
   63 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   64 00000000         
   65 00000000         Stack_Mem
                               SPACE            USR_Stack_Size
   66 00000400         __initial_sp



ARM Macro Assembler    Page 3 


                               SPACE            ISR_Stack_Size
   67 00000500         
   68 00000500         Stack_Top
   69 00000500         
   70 00000500         
   71 00000500         ;// <h> Heap Configuration
   72 00000500         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
   73 00000500         ;// </h>
   74 00000500         
   75 00000500 00000F00 
                       Heap_Size
                               EQU              0x00000F00
   76 00000500         
   77 00000500                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   78 00000000         __heap_base
   79 00000000         Heap_Mem
                               SPACE            Heap_Size
   80 00000F00         __heap_limit
   81 00000F00         
   82 00000F00         
   83 00000F00         ; System Control Block (SCB) Module Definitions
   84 00000F00 E01FC000 
                       SCB_BASE
                               EQU              0xE01FC000  ; SCB Base Address
   85 00000F00 00000080 
                       PLLCON_OFS
                               EQU              0x80        ; PLL Control Offse
                                                            t
   86 00000F00 00000084 
                       PLLCFG_OFS
                               EQU              0x84        ; PLL Configuration
                                                             Offset
   87 00000F00 00000088 
                       PLLSTAT_OFS
                               EQU              0x88        ; PLL Status Offset
                                                            
   88 00000F00 0000008C 
                       PLLFEED_OFS
                               EQU              0x8C        ; PLL Feed Offset
   89 00000F00 00000104 
                       CCLKCFG_OFS
                               EQU              0x104       ; CPU Clock Divider
                                                             Reg Offset
   90 00000F00 00000108 
                       USBCLKCFG_OFS
                               EQU              0x108       ; USB Clock Divider
                                                             Reg Offset
   91 00000F00 0000010C 
                       CLKSRCSEL_OFS
                               EQU              0x10C       ; Clock Source Sel 
                                                            Reg Offset
   92 00000F00 000001A0 
                       SCS_OFS EQU              0x1A0       ; Sys Control and S
                                                            tatus Reg Offset
   93 00000F00 000001A8 
                       PCLKSEL0_OFS
                               EQU              0x1A8       ; Periph Clock Sel 
                                                            Reg 0 Offset



ARM Macro Assembler    Page 4 


   94 00000F00 000001AC 
                       PCLKSEL1_OFS
                               EQU              0x1AC       ; Periph Clock Sel 
                                                            Reg 0 Offset
   95 00000F00         
   96 00000F00         ; Constants
   97 00000F00 00000010 
                       OSCRANGE
                               EQU              (1<<4)      ; Oscillator Range 
                                                            Select
   98 00000F00 00000020 
                       OSCEN   EQU              (1<<5)      ; Main oscillator E
                                                            nable
   99 00000F00 00000040 
                       OSCSTAT EQU              (1<<6)      ; Main Oscillator S
                                                            tatus
  100 00000F00 00000001 
                       PLLCON_PLLE
                               EQU              (1<<0)      ; PLL Enable
  101 00000F00 00000002 
                       PLLCON_PLLC
                               EQU              (1<<1)      ; PLL Connect
  102 00000F00 00007FFF 
                       PLLSTAT_M
                               EQU              (0x7FFF<<0) ; PLL M Value
  103 00000F00 00FF0000 
                       PLLSTAT_N
                               EQU              (0xFF<<16)  ; PLL N Value
  104 00000F00 04000000 
                       PLLSTAT_PLOCK
                               EQU              (1<<26)     ; PLL Lock Status
  105 00000F00         
  106 00000F00         ;// <e> Clock Setup
  107 00000F00         ;//   <h> System Controls and Status Register (SYS)
  108 00000F00         ;//     <o1.4>    OSCRANGE: Main Oscillator Range Select
                       
  109 00000F00         ;//                     <0=>  1 MHz to 20 MHz
  110 00000F00         ;//                     <1=> 15 MHz to 24 MHz
  111 00000F00         ;//     <e1.5>       OSCEN: Main Oscillator Enable
  112 00000F00         ;//     </e>
  113 00000F00         ;//   </h>
  114 00000F00         ;//
  115 00000F00         ;//   <h> PLL Clock Source Select Register (CLKSRCSEL)
  116 00000F00         ;//     <o2.0..1>   CLKSRC: PLL Clock Source Selection
  117 00000F00         ;//                     <0=> Internal RC oscillator
  118 00000F00         ;//                     <1=> Main oscillator
  119 00000F00         ;//                     <2=> RTC oscillator
  120 00000F00         ;//   </h>
  121 00000F00         ;//
  122 00000F00         ;//   <h> PLL Configuration Register (PLLCFG)
  123 00000F00         ;//                     <i> PLL_clk = (2* M * PLL_clk_sr
                       c) / N
  124 00000F00         ;//     <o3.0..14>    MSEL: PLL Multiplier Selection
  125 00000F00         ;//                     <1-32768><#-1>
  126 00000F00         ;//                     <i> M Value
  127 00000F00         ;//     <o3.16..23>   NSEL: PLL Divider Selection
  128 00000F00         ;//                     <1-256><#-1>
  129 00000F00         ;//                     <i> N Value
  130 00000F00         ;//   </h>



ARM Macro Assembler    Page 5 


  131 00000F00         ;//
  132 00000F00         ;//   <h> CPU Clock Configuration Register (CCLKCFG)
  133 00000F00         ;//     <o4.0..7>  CCLKSEL: Divide Value for CPU Clock f
                       rom PLL
  134 00000F00         ;//                     <2-256:2><#-1>
  135 00000F00         ;//   </h>
  136 00000F00         ;//
  137 00000F00         ;//   <h> USB Clock Configuration Register (USBCLKCFG)
  138 00000F00         ;//     <o5.0..3>   USBSEL: Divide Value for USB Clock f
                       rom PLL
  139 00000F00         ;//                     <1-16><#-1>
  140 00000F00         ;//   </h>
  141 00000F00         ;//
  142 00000F00         ;//   <h> Peripheral Clock Selection Register 0 (PCLKSEL
                       0)
  143 00000F00         ;//     <o6.0..1>      PCLK_WDT: Peripheral Clock Select
                       ion for WDT
  144 00000F00         ;//                     <0=> Pclk = Cclk / 4
  145 00000F00         ;//                     <1=> Pclk = Cclk
  146 00000F00         ;//                     <2=> Pclk = Cclk / 2
  147 00000F00         ;//                     <3=> Pclk = Cclk / 8
  148 00000F00         ;//     <o6.2..3>   PCLK_TIMER0: Peripheral Clock Select
                       ion for TIMER0
  149 00000F00         ;//                     <0=> Pclk = Cclk / 4
  150 00000F00         ;//                     <1=> Pclk = Cclk
  151 00000F00         ;//                     <2=> Pclk = Cclk / 2
  152 00000F00         ;//                     <3=> Pclk = Cclk / 8
  153 00000F00         ;//     <o6.4..5>   PCLK_TIMER1: Peripheral Clock Select
                       ion for TIMER1
  154 00000F00         ;//                     <0=> Pclk = Cclk / 4
  155 00000F00         ;//                     <1=> Pclk = Cclk
  156 00000F00         ;//                     <2=> Pclk = Cclk / 2
  157 00000F00         ;//                     <3=> Pclk = Cclk / 8
  158 00000F00         ;//     <o6.6..7>    PCLK_UART0: Peripheral Clock Select
                       ion for UART0
  159 00000F00         ;//                     <0=> Pclk = Cclk / 4
  160 00000F00         ;//                     <1=> Pclk = Cclk
  161 00000F00         ;//                     <2=> Pclk = Cclk / 2
  162 00000F00         ;//                     <3=> Pclk = Cclk / 8
  163 00000F00         ;//     <o6.8..9>    PCLK_UART1: Peripheral Clock Select
                       ion for UART1
  164 00000F00         ;//                     <0=> Pclk = Cclk / 4
  165 00000F00         ;//                     <1=> Pclk = Cclk
  166 00000F00         ;//                     <2=> Pclk = Cclk / 2
  167 00000F00         ;//                     <3=> Pclk = Cclk / 8
  168 00000F00         ;//     <o6.10..11>   PCLK_PWM0: Peripheral Clock Select
                       ion for PWM0
  169 00000F00         ;//                     <0=> Pclk = Cclk / 4
  170 00000F00         ;//                     <1=> Pclk = Cclk
  171 00000F00         ;//                     <2=> Pclk = Cclk / 2
  172 00000F00         ;//                     <3=> Pclk = Cclk / 8
  173 00000F00         ;//     <o6.12..13>   PCLK_PWM1: Peripheral Clock Select
                       ion for PWM1
  174 00000F00         ;//                     <0=> Pclk = Cclk / 4
  175 00000F00         ;//                     <1=> Pclk = Cclk
  176 00000F00         ;//                     <2=> Pclk = Cclk / 2
  177 00000F00         ;//                     <3=> Pclk = Cclk / 8
  178 00000F00         ;//     <o6.14..15>   PCLK_I2C0: Peripheral Clock Select
                       ion for I2C0



ARM Macro Assembler    Page 6 


  179 00000F00         ;//                     <0=> Pclk = Cclk / 4
  180 00000F00         ;//                     <1=> Pclk = Cclk
  181 00000F00         ;//                     <2=> Pclk = Cclk / 2
  182 00000F00         ;//                     <3=> Pclk = Cclk / 8
  183 00000F00         ;//     <o6.16..17>    PCLK_SPI: Peripheral Clock Select
                       ion for SPI
  184 00000F00         ;//                     <0=> Pclk = Cclk / 4
  185 00000F00         ;//                     <1=> Pclk = Cclk
  186 00000F00         ;//                     <2=> Pclk = Cclk / 2
  187 00000F00         ;//                     <3=> Pclk = Cclk / 8
  188 00000F00         ;//     <o6.18..19>    PCLK_RTC: Peripheral Clock Select
                       ion for RTC
  189 00000F00         ;//                     <0=> Pclk = Cclk / 4
  190 00000F00         ;//                     <1=> Pclk = Cclk
  191 00000F00         ;//                     <2=> Pclk = Cclk / 2
  192 00000F00         ;//                     <3=> Pclk = Cclk / 8
  193 00000F00         ;//     <o6.20..21>   PCLK_SSP1: Peripheral Clock Select
                       ion for SSP1
  194 00000F00         ;//                     <0=> Pclk = Cclk / 4
  195 00000F00         ;//                     <1=> Pclk = Cclk
  196 00000F00         ;//                     <2=> Pclk = Cclk / 2
  197 00000F00         ;//                     <3=> Pclk = Cclk / 8
  198 00000F00         ;//     <o6.22..23>    PCLK_DAC: Peripheral Clock Select
                       ion for DAC
  199 00000F00         ;//                     <0=> Pclk = Cclk / 4
  200 00000F00         ;//                     <1=> Pclk = Cclk
  201 00000F00         ;//                     <2=> Pclk = Cclk / 2
  202 00000F00         ;//                     <3=> Pclk = Cclk / 8
  203 00000F00         ;//     <o6.24..25>    PCLK_ADC: Peripheral Clock Select
                       ion for ADC
  204 00000F00         ;//                     <0=> Pclk = Cclk / 4
  205 00000F00         ;//                     <1=> Pclk = Cclk
  206 00000F00         ;//                     <2=> Pclk = Cclk / 2
  207 00000F00         ;//                     <3=> Pclk = Cclk / 8
  208 00000F00         ;//     <o6.26..27>   PCLK_CAN1: Peripheral Clock Select
                       ion for CAN1
  209 00000F00         ;//                     <0=> Pclk = Cclk / 4
  210 00000F00         ;//                     <1=> Pclk = Cclk
  211 00000F00         ;//                     <2=> Pclk = Cclk / 2
  212 00000F00         ;//                     <3=> Pclk = Cclk / 6
  213 00000F00         ;//     <o6.28..29>   PCLK_CAN2: Peripheral Clock Select
                       ion for CAN2
  214 00000F00         ;//                     <0=> Pclk = Cclk / 4
  215 00000F00         ;//                     <1=> Pclk = Cclk
  216 00000F00         ;//                     <2=> Pclk = Cclk / 2
  217 00000F00         ;//                     <3=> Pclk = Cclk / 6
  218 00000F00         ;//     <o6.30..31>    PCLK_ACF: Peripheral Clock Select
                       ion for ACF
  219 00000F00         ;//                     <0=> Pclk = Cclk / 4
  220 00000F00         ;//                     <1=> Pclk = Cclk
  221 00000F00         ;//                     <2=> Pclk = Cclk / 2
  222 00000F00         ;//                     <3=> Pclk = Cclk / 6
  223 00000F00         ;//   </h>
  224 00000F00         ;//
  225 00000F00         ;//   <h> Peripheral Clock Selection Register 1 (PCLKSEL
                       1)
  226 00000F00         ;//     <o7.0..1>  PCLK_BAT_RAM: Peripheral Clock Select
                       ion for the Battery Supported RAM
  227 00000F00         ;//                     <0=> Pclk = Cclk / 4



ARM Macro Assembler    Page 7 


  228 00000F00         ;//                     <1=> Pclk = Cclk
  229 00000F00         ;//                     <2=> Pclk = Cclk / 2
  230 00000F00         ;//                     <3=> Pclk = Cclk / 8
  231 00000F00         ;//     <o7.2..3>     PCLK_GPIO: Peripheral Clock Select
                       ion for GPIOs
  232 00000F00         ;//                     <0=> Pclk = Cclk / 4
  233 00000F00         ;//                     <1=> Pclk = Cclk
  234 00000F00         ;//                     <2=> Pclk = Cclk / 2
  235 00000F00         ;//                     <3=> Pclk = Cclk / 8
  236 00000F00         ;//     <o7.4..5>      PCLK_PCB: Peripheral Clock Select
                       ion for Pin Connect Block
  237 00000F00         ;//                     <0=> Pclk = Cclk / 4
  238 00000F00         ;//                     <1=> Pclk = Cclk
  239 00000F00         ;//                     <2=> Pclk = Cclk / 2
  240 00000F00         ;//                     <3=> Pclk = Cclk / 8
  241 00000F00         ;//     <o7.6..7>     PCLK_I2C1: Peripheral Clock Select
                       ion for I2C1
  242 00000F00         ;//                     <0=> Pclk = Cclk / 4
  243 00000F00         ;//                     <1=> Pclk = Cclk
  244 00000F00         ;//                     <2=> Pclk = Cclk / 2
  245 00000F00         ;//                     <3=> Pclk = Cclk / 8
  246 00000F00         ;//     <o7.10..11>   PCLK_SSP0: Peripheral Clock Select
                       ion for SSP0
  247 00000F00         ;//                     <0=> Pclk = Cclk / 4
  248 00000F00         ;//                     <1=> Pclk = Cclk
  249 00000F00         ;//                     <2=> Pclk = Cclk / 2
  250 00000F00         ;//                     <3=> Pclk = Cclk / 8
  251 00000F00         ;//     <o7.12..13> PCLK_TIMER2: Peripheral Clock Select
                       ion for TIMER2
  252 00000F00         ;//                     <0=> Pclk = Cclk / 4
  253 00000F00         ;//                     <1=> Pclk = Cclk
  254 00000F00         ;//                     <2=> Pclk = Cclk / 2
  255 00000F00         ;//                     <3=> Pclk = Cclk / 8
  256 00000F00         ;//     <o7.14..15> PCLK_TIMER3: Peripheral Clock Select
                       ion for TIMER3
  257 00000F00         ;//                     <0=> Pclk = Cclk / 4
  258 00000F00         ;//                     <1=> Pclk = Cclk
  259 00000F00         ;//                     <2=> Pclk = Cclk / 2
  260 00000F00         ;//                     <3=> Pclk = Cclk / 8
  261 00000F00         ;//     <o7.16..17>  PCLK_UART2: Peripheral Clock Select
                       ion for UART2
  262 00000F00         ;//                     <0=> Pclk = Cclk / 4
  263 00000F00         ;//                     <1=> Pclk = Cclk
  264 00000F00         ;//                     <2=> Pclk = Cclk / 2
  265 00000F00         ;//                     <3=> Pclk = Cclk / 8
  266 00000F00         ;//     <o7.18..19>  PCLK_UART3: Peripheral Clock Select
                       ion for UART3
  267 00000F00         ;//                     <0=> Pclk = Cclk / 4
  268 00000F00         ;//                     <1=> Pclk = Cclk
  269 00000F00         ;//                     <2=> Pclk = Cclk / 2
  270 00000F00         ;//                     <3=> Pclk = Cclk / 8
  271 00000F00         ;//     <o7.20..21>   PCLK_I2C2: Peripheral Clock Select
                       ion for I2C2
  272 00000F00         ;//                     <0=> Pclk = Cclk / 4
  273 00000F00         ;//                     <1=> Pclk = Cclk
  274 00000F00         ;//                     <2=> Pclk = Cclk / 2
  275 00000F00         ;//                     <3=> Pclk = Cclk / 8
  276 00000F00         ;//     <o7.22..23>    PCLK_I2S: Peripheral Clock Select
                       ion for I2S



ARM Macro Assembler    Page 8 


  277 00000F00         ;//                     <0=> Pclk = Cclk / 4
  278 00000F00         ;//                     <1=> Pclk = Cclk
  279 00000F00         ;//                     <2=> Pclk = Cclk / 2
  280 00000F00         ;//                     <3=> Pclk = Cclk / 8
  281 00000F00         ;//     <o7.24..25>    PCLK_MCI: Peripheral Clock Select
                       ion for MCI
  282 00000F00         ;//                     <0=> Pclk = Cclk / 4
  283 00000F00         ;//                     <1=> Pclk = Cclk
  284 00000F00         ;//                     <2=> Pclk = Cclk / 2
  285 00000F00         ;//                     <3=> Pclk = Cclk / 8
  286 00000F00         ;//     <o7.28..29> PCLK_SYSCON: Peripheral Clock Select
                       ion for System Control Block
  287 00000F00         ;//                     <0=> Pclk = Cclk / 4
  288 00000F00         ;//                     <1=> Pclk = Cclk
  289 00000F00         ;//                     <2=> Pclk = Cclk / 2
  290 00000F00         ;//                     <3=> Pclk = Cclk / 8
  291 00000F00         ;//   </h>
  292 00000F00         ;// </e>
  293 00000F00 00000001 
                       CLOCK_SETUP
                               EQU              1
  294 00000F00 00000020 
                       SCS_Val EQU              0x00000020
  295 00000F00 00000001 
                       CLKSRCSEL_Val
                               EQU              0x00000001
  296 00000F00 0000000B 
                       PLLCFG_Val
                               EQU              0x0000000B
  297 00000F00 00000005 
                       CCLKCFG_Val
                               EQU              0x00000005
  298 00000F00 00000005 
                       USBCLKCFG_Val
                               EQU              0x00000005
  299 00000F00 00000000 
                       PCLKSEL0_Val
                               EQU              0x00000000
  300 00000F00 01000000 
                       PCLKSEL1_Val
                               EQU              0x01000000
  301 00000F00         
  302 00000F00         
  303 00000F00         ; Memory Accelerator Module (MAM) definitions
  304 00000F00 E01FC000 
                       MAM_BASE
                               EQU              0xE01FC000  ; MAM Base Address
  305 00000F00 00000000 
                       MAMCR_OFS
                               EQU              0x00        ; MAM Control Offse
                                                            t
  306 00000F00 00000004 
                       MAMTIM_OFS
                               EQU              0x04        ; MAM Timing Offset
                                                            
  307 00000F00         
  308 00000F00         ;// <e> MAM Setup
  309 00000F00         ;//   <o1.0..1>   MAM Control
  310 00000F00         ;//               <0=> Disabled



ARM Macro Assembler    Page 9 


  311 00000F00         ;//               <1=> Partially Enabled
  312 00000F00         ;//               <2=> Fully Enabled
  313 00000F00         ;//               <i> Mode
  314 00000F00         ;//   <o2.0..2>   MAM Timing
  315 00000F00         ;//               <0=> Reserved  <1=> 1   <2=> 2   <3=> 
                       3
  316 00000F00         ;//               <4=> 4         <5=> 5   <6=> 6   <7=> 
                       7
  317 00000F00         ;//               <i> Fetch Cycles
  318 00000F00         ;// </e>
  319 00000F00 00000001 
                       MAM_SETUP
                               EQU              1
  320 00000F00 00000002 
                       MAMCR_Val
                               EQU              0x00000002
  321 00000F00 00000004 
                       MAMTIM_Val
                               EQU              0x00000004
  322 00000F00         
  323 00000F00         
  324 00000F00         ; Area Definition and Entry Point
  325 00000F00         ;  Startup Code must be linked first at Address at which
                        it expects to run.
  326 00000F00         
  327 00000F00                 AREA             RESET, CODE, READONLY
  328 00000000                 ARM
  329 00000000         
  330 00000000         
  331 00000000         ; Exception Vectors
  332 00000000         ;  Mapped to Address 0.
  333 00000000         ;  Absolute addressing mode must be used.
  334 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
  335 00000000         
  336 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr
  337 00000004 E59FF018        LDR              PC, Undef_Addr
  338 00000008 E59FF018        LDR              PC, SWI_Addr
  339 0000000C E59FF018        LDR              PC, PAbt_Addr
  340 00000010 E59FF018        LDR              PC, DAbt_Addr
  341 00000014 E1A00000        NOP                          ; Reserved Vector 
  342 00000018         ;               LDR     PC, IRQ_Addr
  343 00000018 E51FF120        LDR              PC, [PC, #-0x0120] ; Vector fro
                                                            m VicVectAddr
  344 0000001C E59FF018        LDR              PC, FIQ_Addr
  345 00000020         
  346 00000020                 import           FIQ_HandlerClock ;
  347 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
  348 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Handler
  349 00000028 00000000 
                       SWI_Addr
                               DCD              SWI_Handler
  350 0000002C 00000000 
                       PAbt_Addr



ARM Macro Assembler    Page 10 


                               DCD              PAbt_Handler
  351 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
  352 00000034 00000000        DCD              0           ; Reserved Address 
                                                            
  353 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
  354 0000003C 00000000 
                       FIQ_Addr
                               DCD              FIQ_Handler
  355 00000040                 import           SWI_Handler ;
  356 00000040 EAFFFFFE 
                       Undef_Handler
                               B                Undef_Handler
  357 00000044         ;SWI_Handler     B       SWI_Handler
  358 00000044 EAFFFFFE 
                       PAbt_Handler
                               B                PAbt_Handler
  359 00000048 EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
  360 0000004C EAFFFFFE 
                       IRQ_Handler
                               B                IRQ_Handler
  361 00000050 EAFFFFFE 
                       FIQ_Handler
                               B                FIQ_Handler
  362 00000054         
  363 00000054         
  364 00000054         ; Reset Handler
  365 00000054         
  366 00000054                 EXPORT           Reset_Handler
  367 00000054         Reset_Handler
  368 00000054         
  369 00000054         
  370 00000054         ; Setup Clock
  371 00000054                 IF               CLOCK_SETUP != 0
  372 00000054 E59F00FC        LDR              R0, =SCB_BASE
  373 00000058 E3A010AA        MOV              R1, #0xAA
  374 0000005C E3A02055        MOV              R2, #0x55
  375 00000060         
  376 00000060         ;  Configure and Enable PLL
  377 00000060 E3A03020        LDR              R3, =SCS_Val ; Enable main osci
                                                            llator
  378 00000064 E58031A0        STR              R3, [R0, #SCS_OFS]
  379 00000068         
  380 00000068                 IF               (SCS_Val:AND:OSCEN) != 0
  381 00000068 E59031A0 
                       OSC_Loop
                               LDR              R3, [R0, #SCS_OFS] ; Wait for m
                                                            ain osc stabilize
  382 0000006C E2133040        ANDS             R3, R3, #OSCSTAT
  383 00000070 0AFFFFFC        BEQ              OSC_Loop
  384 00000074                 ENDIF
  385 00000074         
  386 00000074 E3A03001        LDR              R3, =CLKSRCSEL_Val ; Select PLL
                                                             source clock



ARM Macro Assembler    Page 11 


  387 00000078 E580310C        STR              R3, [R0, #CLKSRCSEL_OFS]
  388 0000007C E3A0300B        LDR              R3, =PLLCFG_Val
  389 00000080 E5803084        STR              R3, [R0, #PLLCFG_OFS]
  390 00000084 E580108C        STR              R1, [R0, #PLLFEED_OFS]
  391 00000088 E580208C        STR              R2, [R0, #PLLFEED_OFS]
  392 0000008C E3A03001        MOV              R3, #PLLCON_PLLE
  393 00000090 E5803080        STR              R3, [R0, #PLLCON_OFS]
  394 00000094 E580108C        STR              R1, [R0, #PLLFEED_OFS]
  395 00000098 E580208C        STR              R2, [R0, #PLLFEED_OFS]
  396 0000009C         
  397 0000009C         ;  Wait until PLL Locked
  398 0000009C E5903088 
                       PLL_Loop
                               LDR              R3, [R0, #PLLSTAT_OFS]
  399 000000A0 E2133301        ANDS             R3, R3, #PLLSTAT_PLOCK
  400 000000A4 0AFFFFFC        BEQ              PLL_Loop
  401 000000A8         
  402 000000A8 E5903088 
                       M_N_Lock
                               LDR              R3, [R0, #PLLSTAT_OFS]
  403 000000AC E59F40A8        LDR              R4, =(PLLSTAT_M:OR:PLLSTAT_N)
  404 000000B0 E0033004        AND              R3, R3, R4
  405 000000B4 E3A0400B        LDR              R4, =PLLCFG_Val
  406 000000B8 E0333004        EORS             R3, R3, R4
  407 000000BC 1AFFFFF9        BNE              M_N_Lock
  408 000000C0         
  409 000000C0         ;  Setup CPU clock divider
  410 000000C0 E3A03005        MOV              R3, #CCLKCFG_Val
  411 000000C4 E5803104        STR              R3, [R0, #CCLKCFG_OFS]
  412 000000C8         
  413 000000C8         ;  Setup USB clock divider
  414 000000C8 E3A03005        LDR              R3, =USBCLKCFG_Val
  415 000000CC E5803108        STR              R3, [R0, #USBCLKCFG_OFS]
  416 000000D0         
  417 000000D0         ;  Setup Peripheral Clock
  418 000000D0 E3A03000        LDR              R3, =PCLKSEL0_Val
  419 000000D4 E58031A8        STR              R3, [R0, #PCLKSEL0_OFS]
  420 000000D8 E3A03401        LDR              R3, =PCLKSEL1_Val
  421 000000DC E58031AC        STR              R3, [R0, #PCLKSEL1_OFS]
  422 000000E0         
  423 000000E0         ;  Switch to PLL Clock
  424 000000E0 E3A03003        MOV              R3, #(PLLCON_PLLE:OR:PLLCON_PLL
C)
  425 000000E4 E5803080        STR              R3, [R0, #PLLCON_OFS]
  426 000000E8 E580108C        STR              R1, [R0, #PLLFEED_OFS]
  427 000000EC E580208C        STR              R2, [R0, #PLLFEED_OFS]
  428 000000F0                 ENDIF                        ; CLOCK_SETUP
  429 000000F0         
  430 000000F0         
  431 000000F0         ; Setup MAM
  432 000000F0                 IF               MAM_SETUP != 0
  433 000000F0 E59F0060        LDR              R0, =MAM_BASE
  434 000000F4 E3A01004        MOV              R1, #MAMTIM_Val
  435 000000F8 E5801004        STR              R1, [R0, #MAMTIM_OFS]
  436 000000FC E3A01002        MOV              R1, #MAMCR_Val
  437 00000100 E5801000        STR              R1, [R0, #MAMCR_OFS]
  438 00000104                 ENDIF                        ; MAM_SETUP
  439 00000104         
  440 00000104         



ARM Macro Assembler    Page 12 


  441 00000104         ; Memory Mapping (when Interrupt Vectors are in RAM)
  442 00000104 E01FC040 
                       MEMMAP  EQU              0xE01FC040  ; Memory Mapping Co
                                                            ntrol
  443 00000104                 IF               :DEF:REMAP
  451                          ENDIF
  452 00000104         
  453 00000104         
  454 00000104         ; Initialise Interrupt System
  455 00000104         ;  ...
  456 00000104         
  457 00000104         
  458 00000104         ; Setup Stack for each mode
  459 00000104         
  460 00000104 E59F0054        LDR              R0, =Stack_Top
  461 00000108         
  462 00000108         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  463 00000108 E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  464 0000010C E1A0D000        MOV              SP, R0
  465 00000110 E2400000        SUB              R0, R0, #UND_Stack_Size
  466 00000114         
  467 00000114         ;  Enter Abort Mode and set its Stack Pointer
  468 00000114 E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  469 00000118 E1A0D000        MOV              SP, R0
  470 0000011C E2400000        SUB              R0, R0, #ABT_Stack_Size
  471 00000120         
  472 00000120         ;  Enter FIQ Mode and set its Stack Pointer
  473 00000120 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  474 00000124 E1A0D000        MOV              SP, R0
  475 00000128 E2400000        SUB              R0, R0, #FIQ_Stack_Size
  476 0000012C         
  477 0000012C         ;  Enter IRQ Mode and set its Stack Pointer
  478 0000012C E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
  479 00000130 E1A0D000        MOV              SP, R0
  480 00000134 E2400080        SUB              R0, R0, #IRQ_Stack_Size
  481 00000138         
  482 00000138         ;  Enter Supervisor Mode and set its Stack Pointer
  483 00000138 E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  484 0000013C E1A0D000        MOV              SP, R0
  485 00000140 E2400080        SUB              R0, R0, #SVC_Stack_Size
  486 00000144         
  487 00000144         ;  Enter User Mode and set its Stack Pointer
  488 00000144 E321F010        MSR              CPSR_c, #Mode_USR
  489 00000148                 IF               :DEF:__MICROLIB
  494 00000148         
  495 00000148 E1A0D000        MOV              SP, R0
  496 0000014C E24DAB01        SUB              SL, SP, #USR_Stack_Size
  497 00000150         
  498 00000150                 ENDIF
  499 00000150         
  500 00000150         
  501 00000150         ; Enter the C code
  502 00000150         



ARM Macro Assembler    Page 13 


  503 00000150                 IMPORT           __main
  504 00000150 E59F000C        LDR              R0, =__main
  505 00000154 E12FFF10        BX               R0
  506 00000158         
  507 00000158         
  508 00000158                 IF               :DEF:__MICROLIB
  514 00000158         ; User Initial Stack & Heap
  515 00000158 E01FC000 
              00FF7FFF 
              00000000 
              00000000         AREA             |.text|, CODE, READONLY
  516 00000000         
  517 00000000                 IMPORT           __use_two_region_memory
  518 00000000                 EXPORT           __user_initial_stackheap
  519 00000000         __user_initial_stackheap
  520 00000000         
  521 00000000 E59F000C        LDR              R0, =  Heap_Mem
  522 00000004 E59F100C        LDR              R1, =(Stack_Mem + USR_Stack_Siz
e)
  523 00000008 E59F200C        LDR              R2, = (Heap_Mem +      Heap_Siz
e)
  524 0000000C E59F300C        LDR              R3, = Stack_Mem
  525 00000010 E12FFF1E        BX               LR
  526 00000014                 ENDIF
  527 00000014         
  528 00000014         
  529 00000014                 END
              00000000 
              00000400 
              00000F00 
              00000000 
Command Line: --16 --debug --xref --apcs=interwork --depend=.\Obj\LPC2300.d -o.
\Obj\LPC2300.o -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\Philips --predefine="__RTX S
ETA 1" --list=.\Lst\LPC2300.lst LPC2300.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 63 in file LPC2300.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 65 in file LPC2300.s
   Uses
      At line 522 in file LPC2300.s
      At line 524 in file LPC2300.s

Stack_Top 00000500

Symbol: Stack_Top
   Definitions
      At line 68 in file LPC2300.s
   Uses
      At line 460 in file LPC2300.s
Comment: Stack_Top used once
__initial_sp 00000400

Symbol: __initial_sp
   Definitions
      At line 66 in file LPC2300.s
   Uses
      None
Comment: __initial_sp unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 77 in file LPC2300.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 79 in file LPC2300.s
   Uses
      At line 521 in file LPC2300.s
      At line 523 in file LPC2300.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 78 in file LPC2300.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000F00

Symbol: __heap_limit
   Definitions
      At line 80 in file LPC2300.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 351 in file LPC2300.s
   Uses
      At line 340 in file LPC2300.s
Comment: DAbt_Addr used once
DAbt_Handler 00000048

Symbol: DAbt_Handler
   Definitions
      At line 359 in file LPC2300.s
   Uses
      At line 351 in file LPC2300.s
      At line 359 in file LPC2300.s

FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 354 in file LPC2300.s
   Uses
      At line 344 in file LPC2300.s
Comment: FIQ_Addr used once
FIQ_Handler 00000050

Symbol: FIQ_Handler
   Definitions
      At line 361 in file LPC2300.s
   Uses
      At line 354 in file LPC2300.s
      At line 361 in file LPC2300.s

IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 353 in file LPC2300.s
   Uses
      None
Comment: IRQ_Addr unused
IRQ_Handler 0000004C

Symbol: IRQ_Handler
   Definitions
      At line 360 in file LPC2300.s
   Uses
      At line 353 in file LPC2300.s
      At line 360 in file LPC2300.s

M_N_Lock 000000A8

Symbol: M_N_Lock
   Definitions
      At line 402 in file LPC2300.s
   Uses
      At line 407 in file LPC2300.s
Comment: M_N_Lock used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

OSC_Loop 00000068

Symbol: OSC_Loop
   Definitions
      At line 381 in file LPC2300.s
   Uses
      At line 383 in file LPC2300.s
Comment: OSC_Loop used once
PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 350 in file LPC2300.s
   Uses
      At line 339 in file LPC2300.s
Comment: PAbt_Addr used once
PAbt_Handler 00000044

Symbol: PAbt_Handler
   Definitions
      At line 358 in file LPC2300.s
   Uses
      At line 350 in file LPC2300.s
      At line 358 in file LPC2300.s

PLL_Loop 0000009C

Symbol: PLL_Loop
   Definitions
      At line 398 in file LPC2300.s
   Uses
      At line 400 in file LPC2300.s
Comment: PLL_Loop used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 327 in file LPC2300.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 347 in file LPC2300.s
   Uses
      At line 336 in file LPC2300.s
Comment: Reset_Addr used once
Reset_Handler 00000054

Symbol: Reset_Handler
   Definitions
      At line 367 in file LPC2300.s
   Uses
      At line 347 in file LPC2300.s
      At line 366 in file LPC2300.s

SWI_Addr 00000028



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: SWI_Addr
   Definitions
      At line 349 in file LPC2300.s
   Uses
      At line 338 in file LPC2300.s
Comment: SWI_Addr used once
Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 348 in file LPC2300.s
   Uses
      At line 337 in file LPC2300.s
Comment: Undef_Addr used once
Undef_Handler 00000040

Symbol: Undef_Handler
   Definitions
      At line 356 in file LPC2300.s
   Uses
      At line 348 in file LPC2300.s
      At line 356 in file LPC2300.s

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 336 in file LPC2300.s
   Uses
      None
Comment: Vectors unused
18 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 515 in file LPC2300.s
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 519 in file LPC2300.s
   Uses
      At line 518 in file LPC2300.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000000

Symbol: ABT_Stack_Size
   Definitions
      At line 55 in file LPC2300.s
   Uses
      At line 61 in file LPC2300.s
      At line 470 in file LPC2300.s

CCLKCFG_OFS 00000104

Symbol: CCLKCFG_OFS
   Definitions
      At line 89 in file LPC2300.s
   Uses
      At line 411 in file LPC2300.s
Comment: CCLKCFG_OFS used once
CCLKCFG_Val 00000005

Symbol: CCLKCFG_Val
   Definitions
      At line 297 in file LPC2300.s
   Uses
      At line 410 in file LPC2300.s
Comment: CCLKCFG_Val used once
CLKSRCSEL_OFS 0000010C

Symbol: CLKSRCSEL_OFS
   Definitions
      At line 91 in file LPC2300.s
   Uses
      At line 387 in file LPC2300.s
Comment: CLKSRCSEL_OFS used once
CLKSRCSEL_Val 00000001

Symbol: CLKSRCSEL_Val
   Definitions
      At line 295 in file LPC2300.s
   Uses
      At line 386 in file LPC2300.s
Comment: CLKSRCSEL_Val used once
CLOCK_SETUP 00000001

Symbol: CLOCK_SETUP
   Definitions
      At line 293 in file LPC2300.s
   Uses
      At line 371 in file LPC2300.s
Comment: CLOCK_SETUP used once
FIQ_Stack_Size 00000000

Symbol: FIQ_Stack_Size
   Definitions
      At line 56 in file LPC2300.s
   Uses
      At line 61 in file LPC2300.s
      At line 475 in file LPC2300.s

F_Bit 00000040



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: F_Bit
   Definitions
      At line 41 in file LPC2300.s
   Uses
      At line 463 in file LPC2300.s
      At line 468 in file LPC2300.s
      At line 473 in file LPC2300.s
      At line 478 in file LPC2300.s
      At line 483 in file LPC2300.s

Heap_Size 00000F00

Symbol: Heap_Size
   Definitions
      At line 75 in file LPC2300.s
   Uses
      At line 79 in file LPC2300.s
      At line 523 in file LPC2300.s

IRQ_Stack_Size 00000080

Symbol: IRQ_Stack_Size
   Definitions
      At line 57 in file LPC2300.s
   Uses
      At line 61 in file LPC2300.s
      At line 480 in file LPC2300.s

ISR_Stack_Size 00000100

Symbol: ISR_Stack_Size
   Definitions
      At line 61 in file LPC2300.s
   Uses
      At line 66 in file LPC2300.s
Comment: ISR_Stack_Size used once
I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 40 in file LPC2300.s
   Uses
      At line 463 in file LPC2300.s
      At line 468 in file LPC2300.s
      At line 473 in file LPC2300.s
      At line 478 in file LPC2300.s
      At line 483 in file LPC2300.s

MAMCR_OFS 00000000

Symbol: MAMCR_OFS
   Definitions
      At line 305 in file LPC2300.s
   Uses
      At line 437 in file LPC2300.s
Comment: MAMCR_OFS used once
MAMCR_Val 00000002




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: MAMCR_Val
   Definitions
      At line 320 in file LPC2300.s
   Uses
      At line 436 in file LPC2300.s
Comment: MAMCR_Val used once
MAMTIM_OFS 00000004

Symbol: MAMTIM_OFS
   Definitions
      At line 306 in file LPC2300.s
   Uses
      At line 435 in file LPC2300.s
Comment: MAMTIM_OFS used once
MAMTIM_Val 00000004

Symbol: MAMTIM_Val
   Definitions
      At line 321 in file LPC2300.s
   Uses
      At line 434 in file LPC2300.s
Comment: MAMTIM_Val used once
MAM_BASE E01FC000

Symbol: MAM_BASE
   Definitions
      At line 304 in file LPC2300.s
   Uses
      At line 433 in file LPC2300.s
Comment: MAM_BASE used once
MAM_SETUP 00000001

Symbol: MAM_SETUP
   Definitions
      At line 319 in file LPC2300.s
   Uses
      At line 432 in file LPC2300.s
Comment: MAM_SETUP used once
MEMMAP E01FC040

Symbol: MEMMAP
   Definitions
      At line 442 in file LPC2300.s
   Uses
      None
Comment: MEMMAP unused
Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 36 in file LPC2300.s
   Uses
      At line 468 in file LPC2300.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 33 in file LPC2300.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 473 in file LPC2300.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 34 in file LPC2300.s
   Uses
      At line 478 in file LPC2300.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 35 in file LPC2300.s
   Uses
      At line 483 in file LPC2300.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 38 in file LPC2300.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 37 in file LPC2300.s
   Uses
      At line 463 in file LPC2300.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 32 in file LPC2300.s
   Uses
      At line 488 in file LPC2300.s
Comment: Mode_USR used once
OSCEN 00000020

Symbol: OSCEN
   Definitions
      At line 98 in file LPC2300.s
   Uses
      At line 380 in file LPC2300.s
Comment: OSCEN used once
OSCRANGE 00000010

Symbol: OSCRANGE
   Definitions
      At line 97 in file LPC2300.s
   Uses
      None
Comment: OSCRANGE unused



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

OSCSTAT 00000040

Symbol: OSCSTAT
   Definitions
      At line 99 in file LPC2300.s
   Uses
      At line 382 in file LPC2300.s
Comment: OSCSTAT used once
PCLKSEL0_OFS 000001A8

Symbol: PCLKSEL0_OFS
   Definitions
      At line 93 in file LPC2300.s
   Uses
      At line 419 in file LPC2300.s
Comment: PCLKSEL0_OFS used once
PCLKSEL0_Val 00000000

Symbol: PCLKSEL0_Val
   Definitions
      At line 299 in file LPC2300.s
   Uses
      At line 418 in file LPC2300.s
Comment: PCLKSEL0_Val used once
PCLKSEL1_OFS 000001AC

Symbol: PCLKSEL1_OFS
   Definitions
      At line 94 in file LPC2300.s
   Uses
      At line 421 in file LPC2300.s
Comment: PCLKSEL1_OFS used once
PCLKSEL1_Val 01000000

Symbol: PCLKSEL1_Val
   Definitions
      At line 300 in file LPC2300.s
   Uses
      At line 420 in file LPC2300.s
Comment: PCLKSEL1_Val used once
PLLCFG_OFS 00000084

Symbol: PLLCFG_OFS
   Definitions
      At line 86 in file LPC2300.s
   Uses
      At line 389 in file LPC2300.s
Comment: PLLCFG_OFS used once
PLLCFG_Val 0000000B

Symbol: PLLCFG_Val
   Definitions
      At line 296 in file LPC2300.s
   Uses
      At line 388 in file LPC2300.s
      At line 405 in file LPC2300.s

PLLCON_OFS 00000080




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Symbol: PLLCON_OFS
   Definitions
      At line 85 in file LPC2300.s
   Uses
      At line 393 in file LPC2300.s
      At line 425 in file LPC2300.s

PLLCON_PLLC 00000002

Symbol: PLLCON_PLLC
   Definitions
      At line 101 in file LPC2300.s
   Uses
      At line 424 in file LPC2300.s
Comment: PLLCON_PLLC used once
PLLCON_PLLE 00000001

Symbol: PLLCON_PLLE
   Definitions
      At line 100 in file LPC2300.s
   Uses
      At line 392 in file LPC2300.s
      At line 424 in file LPC2300.s

PLLFEED_OFS 0000008C

Symbol: PLLFEED_OFS
   Definitions
      At line 88 in file LPC2300.s
   Uses
      At line 390 in file LPC2300.s
      At line 391 in file LPC2300.s
      At line 394 in file LPC2300.s
      At line 395 in file LPC2300.s
      At line 426 in file LPC2300.s
      At line 427 in file LPC2300.s

PLLSTAT_M 00007FFF

Symbol: PLLSTAT_M
   Definitions
      At line 102 in file LPC2300.s
   Uses
      At line 403 in file LPC2300.s
Comment: PLLSTAT_M used once
PLLSTAT_N 00FF0000

Symbol: PLLSTAT_N
   Definitions
      At line 103 in file LPC2300.s
   Uses
      At line 403 in file LPC2300.s
Comment: PLLSTAT_N used once
PLLSTAT_OFS 00000088

Symbol: PLLSTAT_OFS
   Definitions
      At line 87 in file LPC2300.s
   Uses



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      At line 398 in file LPC2300.s
      At line 402 in file LPC2300.s

PLLSTAT_PLOCK 04000000

Symbol: PLLSTAT_PLOCK
   Definitions
      At line 104 in file LPC2300.s
   Uses
      At line 399 in file LPC2300.s
Comment: PLLSTAT_PLOCK used once
SCB_BASE E01FC000

Symbol: SCB_BASE
   Definitions
      At line 84 in file LPC2300.s
   Uses
      At line 372 in file LPC2300.s
Comment: SCB_BASE used once
SCS_OFS 000001A0

Symbol: SCS_OFS
   Definitions
      At line 92 in file LPC2300.s
   Uses
      At line 378 in file LPC2300.s
      At line 381 in file LPC2300.s

SCS_Val 00000020

Symbol: SCS_Val
   Definitions
      At line 294 in file LPC2300.s
   Uses
      At line 377 in file LPC2300.s
      At line 380 in file LPC2300.s

SVC_Stack_Size 00000080

Symbol: SVC_Stack_Size
   Definitions
      At line 54 in file LPC2300.s
   Uses
      At line 61 in file LPC2300.s
      At line 485 in file LPC2300.s

UND_Stack_Size 00000000

Symbol: UND_Stack_Size
   Definitions
      At line 53 in file LPC2300.s
   Uses
      At line 61 in file LPC2300.s
      At line 465 in file LPC2300.s

USBCLKCFG_OFS 00000108

Symbol: USBCLKCFG_OFS
   Definitions



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

      At line 90 in file LPC2300.s
   Uses
      At line 415 in file LPC2300.s
Comment: USBCLKCFG_OFS used once
USBCLKCFG_Val 00000005

Symbol: USBCLKCFG_Val
   Definitions
      At line 298 in file LPC2300.s
   Uses
      At line 414 in file LPC2300.s
Comment: USBCLKCFG_Val used once
USR_Stack_Size 00000400

Symbol: USR_Stack_Size
   Definitions
      At line 58 in file LPC2300.s
   Uses
      At line 65 in file LPC2300.s
      At line 496 in file LPC2300.s
      At line 522 in file LPC2300.s

51 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

FIQ_HandlerClock 00000000

Symbol: FIQ_HandlerClock
   Definitions
      At line 346 in file LPC2300.s
   Uses
      None
Comment: FIQ_HandlerClock unused
SWI_Handler 00000000

Symbol: SWI_Handler
   Definitions
      At line 355 in file LPC2300.s
   Uses
      At line 349 in file LPC2300.s
Comment: SWI_Handler used once
__main 00000000

Symbol: __main
   Definitions
      At line 503 in file LPC2300.s
   Uses
      At line 504 in file LPC2300.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 517 in file LPC2300.s
   Uses
      None
Comment: __use_two_region_memory unused
4 symbols
417 symbols in table
